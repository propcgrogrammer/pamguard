package generalDatabase.ucanAccess;

import generalDatabase.SQLTypes;

import java.sql.Types;

/*
 * From http://ucanaccess.sourceforge.net/site.html
 * Features

 Supported Access formats: 2000, 2003, 2007, 2010.
 SELECT, INSERT, UPDATE, DELETE statements. Transactions and savepoints.
 Access data types: YESNO, BYTE, INTEGER, LONG, SINGLE, DOUBLE, NUMERIC, CURRENCY, COUNTER, TEXT, OLE, MEMO, GUID,DATETIME.
 Concurrent access from multiple users (i.e., multiple application server threads).
 Connection pooling.
 ANSI 92 SQL, core SQL-2008.
 MS Access SQL.
 Main Access functions implementation.
 You can execute select queries defined and saved in Access. Since 1.0.1 version, UCanAccess can execute crosstab queries (Transfom...Pivot...)
 LIKE operator accepts both standard '_' and access specific '?' as wildcard character, both standard '%' and access specific '*' as jolly, # for 
 single digit(access), [xxx][!xxx]for characters intervals.
 Both & and || string concat.
 Square brackets for field names, table names and view names (Access Queries) including spaces (e.g., select [my column] from [my table] ).
 Access date format (e.g., #11/22/2003 10:42:58 PM#).
 Both double quote " and single quote ' as SQL string delimeters.
 Read and write support to complex types (i.e., array of Version, Attachment, SingleValue).
 Since 2.0.1 version, UCanaccess supports both constants and functions as default column values in create table statements
 e.g., CREATE TABLE AAA ( baaaa text PRIMARY KEY,A long default 3 not null, C text(255) not null, d DATETIME default now(), e text default 'bla')
 Command Line Console. You can run SQL commands and display their results. CSV export command.

 Limitations

 Only basic DDL is supported (create table with primary key, drop table).
 Poor multiprocess access support. Nevertheless it tries to synchronize data when a concurrent process modifies the access file.

 Requirements
 UCanAccess requires Java 2 JDK6 or later to run.
 When dealing with large databases and using the default memory settings (i.e., with Driver Property memory=true), 
 it is recommended that users allocate sufficient memory to the JVM using the -Xms and -Xmx options. 
 Otherwise it's needed to set Driver Property memory=false (Connection conn=DriverManager.getConnection("jdbc:ucanaccess://c:/pippo.mdb;memory=false");)
 Dependencies

 UCanAccess 2.x.x requires (at least) the following dependencies in your classpath:

 jackcess-2.0.0.jar or later
 commons-lang-2.4.jar
 commons-logging-1.0.4.jar
 hsqldb.jar(2.2.5)

 In order to opening encrypted file you must use UCanAccess 2.x.x with jackcess-encrypt-2.x.x and all related dependecies

 Old versions of UCanAccess (0.x.x or 1.x.x) require (at least) the following dependencies in your classpath:

 jackcess-1.2.9.jar or later
 commons-lang-2.4.jar
 commons-logging-1.0.4.jar
 hsqldb.jar(2.2.x)
 */

/**
 * Type modifications for ucanacces.
 * 
 * @author Doug
 * 
 */
public class UCanAccessSqlTypes extends SQLTypes {

	@Override
	public String typeToString(int sqlType, int length, boolean counter) {
		if (sqlType == Types.INTEGER && counter) {
			return "COUNTER NOT NULL";
			// return "INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1)";
		} else if (sqlType == Types.BOOLEAN) {
			return "YESNO";
		}
		// else if (sqlType == Types.BINARY) {
		//
		// }

		return super.typeToString(sqlType, length, counter);
	}

	@Override
	public synchronized String formatColumnName(String columnName) {
		return "[" + super.formatColumnName(columnName) + "]";
//		if (columnName.trim().toUpperCase().equals("ORDER")) {
//			return "ItemOrder";
//		} else
//			return super.formatColumnName(columnName);
	}

}
