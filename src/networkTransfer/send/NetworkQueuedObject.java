package networkTransfer.send;

import PamguardMVC.PamDataBlock;
import networkTransfer.receive.NetworkReceiver;

public class NetworkQueuedObject {

	/** the ID for buoy 1, defined in the Network Sender settings dialog.  Only used for byte array messages. */
	int buoyId1;

	/** the ID for buoy 2, defined in the Network Sender settings dialog  Only used for byte array messages. */
	int buoyId2;
	
	/** flag used by NetworkSender and NetworkReceiver to classify the data - see {@link NetworkReceiver}
	 *  for values.  This is only used for byte array messages */
	int dataType1;
	
	/** If the message being sent is data, dataType2 is a compressed data block name
	 *  generated by {@link PamDataBlock#getQuickId()}.  If the message being sent is a Pam Command,
	 *  dataType2 is the command.  This is only used for byte array messages. */
	int dataType2;

	/** the format that the data is in (see the constants in {@link NetworkSendParams} for values) */
	int format;

	/** the data to send, in byte array format */
	byte[] data;
	
	/** the data to send, in json format */
	String jsonString;

	/** the length of the data to send */
	int dataLength;
	
	
	/**
	 * Constructor for a byte-array message, to send to a remote PAMGuard installation
	 * 
	 * @param buoyId1
	 * @param buoyId2
	 * @param dataType1
	 * @param dataType2
	 * @param dataLength
	 * @param data
	 */
	public NetworkQueuedObject(int buoyId1, int buoyId2, int dataType1,
			int dataType2, byte[] data) {
		super();
		this.format = NetworkSendParams.NETWORKSEND_BYTEARRAY;
		this.buoyId1 = buoyId1;
		this.buoyId2 = buoyId2;
		this.dataType1 = dataType1;
		this.dataType2 = dataType2;
		if (data != null) {
			this.data = data;
			dataLength = data.length;
		}
	}
	
	
	/**
	 * Constructor for json-formatted string output
	 * 
	 * @param jsonString
	 */
	public NetworkQueuedObject(String jsonString) {
		super();
		this.format = NetworkSendParams.NETWORKSEND_JSON;
		this.jsonString = jsonString;
		this.dataLength = jsonString.length();
	}
	
	
}
